diff -Naur a/SDL2-2.0.14/src/events/SDL_quit.c b/SDL2-2.0.14/src/events/SDL_quit.c
--- a/SDL2-2.0.14/src/events/SDL_quit.c	2020-12-22 01:44:36.000000000 +0800
+++ b/SDL2-2.0.14/src/events/SDL_quit.c	2021-09-17 16:32:21.230683701 +0800
@@ -35,6 +35,8 @@
 #define HAVE_SIGNAL_SUPPORT 1
 #endif
 
+#define SDL_FOREGROUNDING_SIGNAL 1
+
 #ifdef HAVE_SIGNAL_SUPPORT
 static SDL_bool disable_signals = SDL_FALSE;
 static SDL_bool send_quit_pending = SDL_FALSE;
@@ -44,7 +46,7 @@
 #endif
 
 #ifdef SDL_FOREGROUNDING_SIGNAL
-static SDL_bool send_foregrounding_pending = SDL_FALSE;
+static SDL_bool send_foregrounding_pending = SDL_TRUE;
 #endif
 
 static void
diff -Naur a/SDL2-2.0.14/src/video/rtt/SDL_rttkeyboard.c b/SDL2-2.0.14/src/video/rtt/SDL_rttkeyboard.c
--- a/SDL2-2.0.14/src/video/rtt/SDL_rttkeyboard.c	1970-01-01 08:00:00.000000000 +0800
+++ b/SDL2-2.0.14/src/video/rtt/SDL_rttkeyboard.c	2021-09-17 10:17:52.406451938 +0800
@@ -0,0 +1,84 @@
+/*
+  Simple DirectMedia Layer
+  Copyright (C) 1997-2018 Sam Lantinga <slouken@libsdl.org>
+
+  This software is provided 'as-is', without any express or implied
+  warranty.  In no event will the authors be held liable for any damages
+  arising from the use of this software.
+
+  Permission is granted to anyone to use this software for any purpose,
+  including commercial applications, and to alter it and redistribute it
+  freely, subject to the following restrictions:
+
+  1. The origin of this software must not be misrepresented; you must not
+     claim that you wrote the original software. If you use this software
+     in a product, an acknowledgment in the product documentation would be
+     appreciated but is not required.
+  2. Altered source versions must be plainly marked as such, and must not be
+     misrepresented as being the original software.
+  3. This notice may not be removed or altered from any source distribution.
+*/
+#include "../../SDL_internal.h"
+
+
+//#include <rtthread.h> 
+
+#include "SDL_events.h"
+#include "SDL_log.h"
+#include "SDL_rttvideo.h"
+#include "SDL_rttkeyboard.h"
+#include "../../events/SDL_keyboard_c.h"
+
+#define NUM_SCANCODES_RTT 68 
+static SDL_bool keystate[NUM_SCANCODES_RTT] = {0};
+
+void RTT_InitKeyboard(void)
+{
+
+}
+
+__attribute__((weak)) int RTT_HeldKeyboardCode(int index)
+{
+    return 0; 
+}
+
+__attribute__((weak)) int RTT_GetKeyboardCode(int keycode) 
+{
+    return 0; 
+}
+
+void RTT_PollKeyboard(void)
+{
+    // We skip polling keyboard if no window is created
+    if (SDL_GetFocusWindow() == NULL)
+    {
+        return;
+    }
+
+    for (int i = 0; i < NUM_SCANCODES_RTT; i++)
+    {
+        int press = RTT_HeldKeyboardCode(i); 
+        int keyCode = RTT_GetKeyboardCode(i); 
+
+        if(press && !keystate[i])
+        {
+            SDL_LogInfo(SDL_LOG_CATEGORY_INPUT, "keyCode = %d, Down\n", keyCode); 
+            SDL_SendKeyboardKey(SDL_PRESSED, keyCode); 
+            keystate[i] = SDL_TRUE;
+        }
+        else if(!press && keystate[i]) 
+        {
+            SDL_LogInfo(SDL_LOG_CATEGORY_INPUT, "keyCode = %d, Up\n", keyCode); 
+            SDL_SendKeyboardKey(SDL_RELEASED, keyCode);
+            keystate[i] = SDL_FALSE;
+        }
+    }
+}
+
+void RTT_QuitKeyboard(void)
+{
+
+}
+
+
+/* vi: set ts=4 sw=4 expandtab: */
diff -Naur a/SDL2-2.0.14/src/video/rtt/SDL_rttkeyboard.h b/SDL2-2.0.14/src/video/rtt/SDL_rttkeyboard.h
--- a/SDL2-2.0.14/src/video/rtt/SDL_rttkeyboard.h	1970-01-01 08:00:00.000000000 +0800
+++ b/SDL2-2.0.14/src/video/rtt/SDL_rttkeyboard.h	2021-09-17 10:17:52.406451938 +0800
@@ -0,0 +1,34 @@
+/*
+  Simple DirectMedia Layer
+  Copyright (C) 1997-2018 Sam Lantinga <slouken@libsdl.org>
+
+  This software is provided 'as-is', without any express or implied
+  warranty.  In no event will the authors be held liable for any damages
+  arising from the use of this software.
+
+  Permission is granted to anyone to use this software for any purpose,
+  including commercial applications, and to alter it and redistribute it
+  freely, subject to the following restrictions:
+
+  1. The origin of this software must not be misrepresented; you must not
+     claim that you wrote the original software. If you use this software
+     in a product, an acknowledgment in the product documentation would be
+     appreciated but is not required.
+  2. Altered source versions must be plainly marked as such, and must not be
+     misrepresented as being the original software.
+  3. This notice may not be removed or altered from any source distribution.
+*/
+
+#ifndef _SDL_rttkeyboard_h
+#define _SDL_rttkeyboard_h
+
+#include "../../SDL_internal.h"
+
+/* Keyboard functions */
+extern void RTT_InitKeyboard(void);
+extern void RTT_PollKeyboard(void);
+extern void RTT_QuitKeyboard(void);
+
+#endif /* _SDL_keyboard_h */
+
+/* vi: set ts=4 sw=4 expandtab: */
diff -Naur a/SDL2-2.0.14/src/video/rtt/SDL_rttlcd.c b/SDL2-2.0.14/src/video/rtt/SDL_rttlcd.c
--- a/SDL2-2.0.14/src/video/rtt/SDL_rttlcd.c	2021-09-17 16:35:31.939275736 +0800
+++ b/SDL2-2.0.14/src/video/rtt/SDL_rttlcd.c	2021-09-17 10:17:52.406451938 +0800
@@ -15,7 +15,7 @@
 #include "SDL_surface.h"
 #include "SDL_pixels.h"
 #include "SDL_rttlcd.h"
-#include "rtthread.h"
+
 
 rt_device_t lcd = NULL;
 struct fb_fix_screeninfo f_info;
@@ -27,7 +27,7 @@
     {
         memcpy((void *)f_info.smem_start, (rt_uint8_t *)(surface->pixels), f_info.smem_len);
         rt_thread_mdelay(100);
-        rt_device_control(lcd, RTGRAPHIC_CTRL_RECT_UPDATE, NULL);
+        rt_device_control(lcd, RTGRAPHIC_CTRL_RECT_UPDATE, RT_NULL);
     }
     return 0;
 }
diff -Naur a/SDL2-2.0.14/src/video/rtt/SDL_rttlcd.h b/SDL2-2.0.14/src/video/rtt/SDL_rttlcd.h
--- a/SDL2-2.0.14/src/video/rtt/SDL_rttlcd.h	2021-09-17 16:35:31.939275736 +0800
+++ b/SDL2-2.0.14/src/video/rtt/SDL_rttlcd.h	2021-09-17 10:17:52.406451938 +0800
@@ -12,9 +12,26 @@
 #ifndef SDL_RTTLCD_H_
 #define SDL_RTTLCD_H_
 
+#include <rtthread.h>
 #define RTGRAPHIC_CTRL_RECT_UPDATE 0
 #define ART_PI_SMART 1
 
+#define RTGRAPHIC_CTRL_GET_INFO         3
+extern void *RTT_GetWindowInfo(void);
+
+struct rt_device_graphic_info
+{
+    rt_uint8_t  pixel_format;                           /**< graphic format */
+    rt_uint8_t  bits_per_pixel;                         /**< bits per pixel */
+    rt_uint16_t reserved;                               /**< reserved field */
+
+    rt_uint16_t width;                                  /**< width of graphic device */
+    rt_uint16_t height;                                 /**< height of graphic device */
+
+    rt_uint8_t *framebuffer;                            /**< frame buffer */
+};
+
+
 struct rtt_lcd_config
 {
     Uint32 lcd_width;
diff -Naur a/SDL2-2.0.14/src/video/rtt/SDL_rttmouse.c b/SDL2-2.0.14/src/video/rtt/SDL_rttmouse.c
--- a/SDL2-2.0.14/src/video/rtt/SDL_rttmouse.c	1970-01-01 08:00:00.000000000 +0800
+++ b/SDL2-2.0.14/src/video/rtt/SDL_rttmouse.c	2021-09-17 10:17:52.406451938 +0800
@@ -0,0 +1,56 @@
+/*
+  Simple DirectMedia Layer
+  Copyright (C) 1997-2018 Sam Lantinga <slouken@libsdl.org>
+
+  This software is provided 'as-is', without any express or implied
+  warranty.  In no event will the authors be held liable for any damages
+  arising from the use of this software.
+
+  Permission is granted to anyone to use this software for any purpose,
+  including commercial applications, and to alter it and redistribute it
+  freely, subject to the following restrictions:
+
+  1. The origin of this software must not be misrepresented; you must not
+     claim that you wrote the original software. If you use this software
+     in a product, an acknowledgment in the product documentation would be
+     appreciated but is not required.
+  2. Altered source versions must be plainly marked as such, and must not be
+     misrepresented as being the original software.
+  3. This notice may not be removed or altered from any source distribution.
+*/
+#include "../../SDL_internal.h"
+
+
+//#include <rtthread.h>
+
+#include "SDL_timer.h"
+#include "SDL_events.h"
+#include "SDL_log.h"
+#include "SDL_mouse.h"
+#include "SDL_rttvideo.h"
+#include "SDL_rttmouse.h"
+#include "../../events/SDL_mouse_c.h" 
+
+static int RTT_SetRelativeMouseMode(SDL_bool enabled)
+{
+    return 0;
+}
+
+void RTT_InitMouse(void)
+{
+    SDL_Mouse *mouse = SDL_GetMouse();
+
+    mouse->SetRelativeMouseMode = RTT_SetRelativeMouseMode;
+}
+
+void RTT_PollMouse(void)
+{
+
+}
+
+void RTT_QuitMouse(void)
+{
+}
+
+
+/* vi: set ts=4 sw=4 expandtab: */
diff -Naur a/SDL2-2.0.14/src/video/rtt/SDL_rttmouse.h b/SDL2-2.0.14/src/video/rtt/SDL_rttmouse.h
--- a/SDL2-2.0.14/src/video/rtt/SDL_rttmouse.h	1970-01-01 08:00:00.000000000 +0800
+++ b/SDL2-2.0.14/src/video/rtt/SDL_rttmouse.h	2021-09-17 10:17:52.406451938 +0800
@@ -0,0 +1,34 @@
+/*
+  Simple DirectMedia Layer
+  Copyright (C) 1997-2018 Sam Lantinga <slouken@libsdl.org>
+
+  This software is provided 'as-is', without any express or implied
+  warranty.  In no event will the authors be held liable for any damages
+  arising from the use of this software.
+
+  Permission is granted to anyone to use this software for any purpose,
+  including commercial applications, and to alter it and redistribute it
+  freely, subject to the following restrictions:
+
+  1. The origin of this software must not be misrepresented; you must not
+     claim that you wrote the original software. If you use this software
+     in a product, an acknowledgment in the product documentation would be
+     appreciated but is not required.
+  2. Altered source versions must be plainly marked as such, and must not be
+     misrepresented as being the original software.
+  3. This notice may not be removed or altered from any source distribution.
+*/
+
+#ifndef _SDL_rttmouse_h
+#define _SDL_rttmouse_h
+
+#include "../../SDL_internal.h"
+
+/* mouse functions */
+extern void RTT_InitMouse(void);
+extern void RTT_PollMouse(void);
+extern void RTT_QuitMouse(void);
+
+#endif /* _SDL_rttmouse_h */
+
+/* vi: set ts=4 sw=4 expandtab: */
diff -Naur a/SDL2-2.0.14/src/video/rtt/SDL_rtttouch.c b/SDL2-2.0.14/src/video/rtt/SDL_rtttouch.c
--- a/SDL2-2.0.14/src/video/rtt/SDL_rtttouch.c	1970-01-01 08:00:00.000000000 +0800
+++ b/SDL2-2.0.14/src/video/rtt/SDL_rtttouch.c	2021-09-17 10:17:52.406451938 +0800
@@ -0,0 +1,103 @@
+/*
+  Simple DirectMedia Layer
+  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>
+
+  This software is provided 'as-is', without any express or implied
+  warranty.  In no event will the authors be held liable for any damages
+  arising from the use of this software.
+
+  Permission is granted to anyone to use this software for any purpose,
+  including commercial applications, and to alter it and redistribute it
+  freely, subject to the following restrictions:
+
+  1. The origin of this software must not be misrepresented; you must not
+     claim that you wrote the original software. If you use this software
+     in a product, an acknowledgment in the product documentation would be
+     appreciated but is not required.
+  2. Altered source versions must be plainly marked as such, and must not be
+     misrepresented as being the original software.
+  3. This notice may not be removed or altered from any source distribution.
+*/
+#include "../../SDL_internal.h"
+
+
+#include <touch.h>
+
+#include <SDL_events.h>
+#include "SDL_hints.h"
+#include "SDL_rttvideo.h"
+#include "../../events/SDL_touch_c.h"
+#include "../../video/SDL_sysvideo.h"
+#include "rtthread.h"
+#include "SDL_rttlcd.h"
+
+//static struct rt_touch_device *touch = NULL; 
+static struct rt_device_t *touch = NULL; 
+static struct rt_touch_data touch_data;
+
+void RTT_InitTouch(void)
+{
+    touch = rt_device_find("gt911"); 
+    if(touch)
+    {
+        //rt_device_open(touch, RT_DEVICE_FLAG_RDONLY);
+        rt_device_open(touch, RT_DEVICE_FLAG_INT_RX);
+	rt_device_control(touch, RT_TOUCH_CTRL_ENABLE_INT, RT_NULL);
+       // SDL_LogDebug(SDL_LOG_CATEGORY_INPUT, "Touch Type    : %d", touch->info.type); 
+      //  SDL_LogDebug(SDL_LOG_CATEGORY_INPUT, "Touch Vendor  : %d", touch->info.vendor); 
+      //  SDL_LogDebug(SDL_LOG_CATEGORY_INPUT, "Touch PointNum: %d", touch->info.point_num); 
+      //  SDL_LogDebug(SDL_LOG_CATEGORY_INPUT, "Touch RangeX  : %d", touch->info.range_x); 
+      //  SDL_LogDebug(SDL_LOG_CATEGORY_INPUT, "Touch RangeY  : %d", touch->info.range_y); 
+    
+        SDL_AddTouch((SDL_TouchID) 0, SDL_TOUCH_DEVICE_DIRECT, "RTTTouch");
+        SDL_SetHintWithPriority(SDL_HINT_TOUCH_MOUSE_EVENTS, "0", SDL_HINT_DEFAULT);
+    } 
+}
+
+void RTT_QuitTouch(void)
+{
+    if(touch)
+    {
+        rt_device_close(touch); 
+        touch = NULL; 
+    }
+}
+
+void RTT_PollTouch(void)
+{
+    int width = 1024;
+    int height = 600;
+    if(touch)
+    {
+        SDL_Window *window = SDL_GetFocusWindow();
+        if (window == NULL)
+        {
+            return;
+        }
+
+        if (rt_device_read(touch, 0, &touch_data, 1) == 1)
+	{
+            if(touch_data.event == RT_TOUCH_EVENT_DOWN)
+            {
+                SDL_SendTouch(0, (SDL_FingerID) 0, window, SDL_TRUE,
+                (float)touch_data.x_coordinate/(float)width,
+                (float)touch_data.y_coordinate/(float)height, 1); 
+            }
+            else if(touch_data.event == RT_TOUCH_EVENT_UP)
+            {
+                SDL_SendTouch(0, (SDL_FingerID) 0, window, SDL_FALSE,
+                (float)touch_data.x_coordinate/(float)width,
+                (float)touch_data.y_coordinate/(float)height, 1);
+            }
+            else if(touch_data.event == RT_TOUCH_EVENT_MOVE)
+            {
+                SDL_SendTouchMotion(0, (SDL_FingerID) 0, window,
+                (float)touch_data.x_coordinate/(float)width,
+                (float)touch_data.y_coordinate/(float)height, 1);
+            }
+	}
+    }
+}
+
+
+/* vi: set ts=4 sw=4 expandtab: */
diff -Naur a/SDL2-2.0.14/src/video/rtt/SDL_rtttouch.h b/SDL2-2.0.14/src/video/rtt/SDL_rtttouch.h
--- a/SDL2-2.0.14/src/video/rtt/SDL_rtttouch.h	1970-01-01 08:00:00.000000000 +0800
+++ b/SDL2-2.0.14/src/video/rtt/SDL_rtttouch.h	2021-09-17 10:17:52.406451938 +0800
@@ -0,0 +1,34 @@
+/*
+  Simple DirectMedia Layer
+  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>
+
+  This software is provided 'as-is', without any express or implied
+  warranty.  In no event will the authors be held liable for any damages
+  arising from the use of this software.
+
+  Permission is granted to anyone to use this software for any purpose,
+  including commercial applications, and to alter it and redistribute it
+  freely, subject to the following restrictions:
+
+  1. The origin of this software must not be misrepresented; you must not
+     claim that you wrote the original software. If you use this software
+     in a product, an acknowledgment in the product documentation would be
+     appreciated but is not required.
+  2. Altered source versions must be plainly marked as such, and must not be
+     misrepresented as being the original software.
+  3. This notice may not be removed or altered from any source distribution.
+*/
+
+#ifndef _SDL_rtttouch_h
+#define _SDL_rtttouch_h
+
+#include "../../SDL_internal.h"
+
+/* Touch functions */
+extern void RTT_InitTouch(void);
+extern void RTT_QuitTouch(void);
+extern void RTT_PollTouch(void);
+
+#endif /* _SDL_rtttouch_h */
+
+/* vi: set ts=4 sw=4 expandtab: */
diff -Naur a/SDL2-2.0.14/src/video/rtt/SDL_rttvideo.c b/SDL2-2.0.14/src/video/rtt/SDL_rttvideo.c
--- a/SDL2-2.0.14/src/video/rtt/SDL_rttvideo.c	2021-09-17 16:35:31.939275736 +0800
+++ b/SDL2-2.0.14/src/video/rtt/SDL_rttvideo.c	2021-09-17 16:32:08.466365781 +0800
@@ -35,11 +35,18 @@
 Uint32 rtt_screen_heigth;
 Uint32 rtt_lcd_pixel_format;
 
+
+void RTT_PumpEvents(_THIS)
+{
+    RTT_PollTouch();
+    RTT_PollKeyboard();
+//    RTT_PollMouse();
+}
+
 static int
 RTT_Available(void)
 {
     const char *envr = SDL_getenv("SDL_VIDEODRIVER");
-    printf("envr: %s",envr);
     if ((envr) && (SDL_strcmp(envr, RTT_DRIVER_NAME) == 0)) {
         return (1);
     }
@@ -107,6 +114,8 @@
     device->CreateSDLWindow = RTT_CreateWindow;
     device->SetWindowTitle = RTT_SetWindowTitle;
 
+    device->PumpEvents = RTT_PumpEvents;
+
     device->free = RTT_DeleteDevice;
     return device;
 }
@@ -142,6 +151,7 @@
 
     SDL_zero(mode);
     SDL_AddDisplayMode(&_this->displays[0], &mode);
+    RTT_InitTouch();
 
     /* We're done! */
     return 0;
@@ -157,7 +167,8 @@
 RTT_VideoQuit(_THIS)
 {
     RTT_lcdQuit();
+    RTT_QuitTouch();
 }
 
 
-#endif /* SDL_VIDEO_DRIVER_RTT */
\ 文件尾没有换行符
+#endif /* SDL_VIDEO_DRIVER_RTT */
diff -Naur a/SDL2-2.0.14/src/video/rtt/SDL_rttvideo.h b/SDL2-2.0.14/src/video/rtt/SDL_rttvideo.h
--- a/SDL2-2.0.14/src/video/rtt/SDL_rttvideo.h	2021-09-17 16:35:31.935275642 +0800
+++ b/SDL2-2.0.14/src/video/rtt/SDL_rttvideo.h	2021-09-17 10:17:52.406451938 +0800
@@ -15,8 +15,11 @@
 
 #include "../SDL_sysvideo.h"
 #include "SDL_rttlcd.h"
+#include "SDL_rtttouch.h"
+#include "SDL_rttkeyboard.h"
+#include "SDL_rttmouse.h"
 
 #define WINDOW_WIDTH_MAX   LCD_WIDTH
 #define WINDOW_HEIGHT_MAX  LCD_HEIGHT 
 
-#endif /* SDL_nullvideo_h_ */
\ 文件尾没有换行符
+#endif /* SDL_nullvideo_h_ */
